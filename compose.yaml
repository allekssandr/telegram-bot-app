version: "3"
name: tg-bot-docker
services:

  db:
    image: postgres:14
    restart: always
    container_name: postgres-container
    shm_size: 128mb
    environment:
      POSTGRES_DB: telegram_bot
      POSTGRES_USER: telegram_bot
      POSTGRES_PASSWORD: 123
      POSTGRES_LISTEN_ADDRESSES: '*'
    healthcheck:
      test: [ "CMD", "pg_isready" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - 5433:5432
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
#      - ./dump.sql:/docker-entrypoint-initdb.d/dump.sql
    networks:
      - my_network

  tg-bot-app:
    container_name: tg-bot-app-container
    build:
      context: ./bot_app
    ports:
      - 3001:3001
    environment:
      BOT_TOKEN: 5509036036:AAHdbNQ0WhRgtb2iQ8K1WanS9HPd_ZvAM0U
      POSTGRES_DATABASE: telegram_bot
      POSTGRES_USERNAME: telegram_bot
      POSTGRES_PASSWORD: 123
      POSTGRES_HOST: db
      POSTGRES_PORT: 5432
      POSTGRES_DIALECT: postgres
      PROVIDER_TOKEN: 1902332405:LIVE:638218275098052721
      PROVIDER_TOKEN_TEST: 1744374395:TEST:cbbf8f82426c62d89265
#    env_file:
#      - .env
    depends_on:
      db:
        condition: service_healthy
    networks:
      - my_network

networks:
  my_network:
      driver: bridge